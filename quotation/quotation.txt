1. 如果调试程序是移除臭虫(软件缺陷)的过程，那编写程序就是把臭虫放进来的过程。
   — Edsger Dijkstra

2. 软件开发的时间通常是这样的：一开始的90%开发工作用掉了整个计划90%的时间，
   剩下的10%同样需要整个计划90%的时间，而最终发布前的修改也是如此。
   — N.J. Rubenking

3. 设计软件有两种方法：一种是简单到明显没有缺陷，另一种复杂到缺陷不那么明显。
   — C.A.R. Hoare

4. 用代码行数来衡量程序的开发进度，就好比用重量来衡量飞机的制造进度。
   — Bill Gates

5. 在编写代码的时候，你要经常想着，那个最终维护你代码的人可能将是一个有暴力倾向的疯子，
   并且他还知道你住在哪里。
   — Martin Golding

6. 程序员的问题是，你无法知道他在做什么，直到为时已晚。
   — Seymour Cray

7. 今日之编程，已是竭力要建立更大更反白痴程序的软件工程师，和正塑造更大更优质白痴的现实世界之间的比赛。
   目前来看，现实世界赢了。
   — Rick Cook

8. 你们大部分人都熟悉程序员的美德。当然了，是这三种：懒惰、急躁、傲慢。
   — Larry Wall

9. 有的时候宁愿付钱让你周一在床上待着，也不想让你用这周剩下的时间去调试你在周一所写的代码。
   — Christopher Thompson

10. 在水中行走，和根据一份需求开发软件一样，如果它们都“冻”住了，那就容易了。
    — Edward V Berard

11. 一个好的程序员应该是那种过单行线都要往两边看的人。
    — Doug Linder

12. 抽象化是一种非常的不同于模糊化的东西，抽象的目的并不是为了模糊，而是为了创造出一种能让我们做到
    百分百精确的新语义。
    — Edsger Dijkstra

13. C语言很容易让你犯错误；C++看起来好一些，但当你用它时，你会发现会死的更惨。
    — Bjarne Stroustrup

14. 高质量的代码就是对程序自己最好的注释。当你打算要添加注释时，问问自己，
    “我如何能改进编码以至于根本不需要添加注释？”改进你的代码，然后才是用注释使它更清楚。
    — Steve McConnell

15. 任何优秀的大软件里面都是一个优秀的小程序。
    — Charles Antony Richard Hoare

16. 简单是稳定的前提。
    — Edsger Dijkstra

17. 性能的关键是精简，而不是一堆的优化用例。除非有真正显著的效果，
    否则一定要忍住你那些蠢蠢欲动的小微调的企图。
    — Jon Bently 和 M. Douglas McIlroy

18. 使用C++的问题就在于这种语言有一种很大的脾气，在你想做任何事情之前你必须把所有的知识都掌握才行。
    — Larry Wall

19. 开发的越早，程序花费你的时间越长。
    — Roy Carlson

20. 世上只有两种编程语言：一种是总是被人骂的，一种是从来没人用的。
    — Bjarne Stroustrup

21. 丑陋的程序和丑陋的吊桥一样：他们都容易坍塌，因为人类(尤其是工程师们)的审美定义跟人们对复杂事物的处理
    和理解密切相关。一种编程语言如果不能使你写出优美的代码，那它也就不能使你写出好的程序。
    — Eric S.Raymond

22. 省下几个小时的计划时间，需要数周的编程时间来弥补。
    — 佚名
